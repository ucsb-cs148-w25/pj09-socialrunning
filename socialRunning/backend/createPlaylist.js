  // Step 2: Create Playlist Based on Zone
  const createPlaylist = async () => {
    if (!token) {
      Alert.alert('Please authenticate first!');
      return;
    }

    // Define tempo and energy ranges based on zone
    const zoneParameters = {
      'Zone 2': { minTempo: 120, maxTempo: 140, energy: 0.5 },
      'Zone 3': { minTempo: 140, maxTempo: 160, energy: 0.7 },
      // Add more zones as needed
    };

    const params = zoneParameters[zone];
    if (!params) {
      Alert.alert('Invalid Zone', 'Please enter a valid zone like "Zone 2" or "Zone 3".');
      return;
    }

    try {
      // Fetch user's profile
      const userProfile = await axios.get('https://api.spotify.com/v1/me', {
        headers: { Authorization: `Bearer ${token}` },
      });

      const userId = userProfile.data.id;

      // Search for tracks based on zone parameters
      const trackResponse = await axios.get('https://api.spotify.com/v1/recommendations', {
        headers: { Authorization: `Bearer ${token}` },
        params: {
          seed_genres: 'workout',
          target_tempo: (params.minTempo + params.maxTempo) / 2,
          target_energy: params.energy,
          limit: 20,
        },
      });

      const trackUris = trackResponse.data.tracks.map((track) => track.uri);

      // Create a new playlist
      const playlistResponse = await axios.post(
        `https://api.spotify.com/v1/users/${userId}/playlists`,
        { name: playlistName || `${zone} Running Playlist`, description: 'Generated by Zone Running App', public: true },
        { headers: { Authorization: `Bearer ${token}` } }
      );

      const playlistId = playlistResponse.data.id;

      // Add tracks to the playlist
      await axios.post(
        `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,
        { uris: trackUris },
        { headers: { Authorization: `Bearer ${token}` } }
      );

      Alert.alert('Playlist Created!', `Check your Spotify for the "${zone} Running Playlist".`);
    } catch (error) {
      console.error(error);
      Alert.alert('Error', 'Something went wrong while creating the playlist.');
    }
  };